#!/bin/bash
#
# apt-get-key -- resolve your missing gpg keys
# Copyright (C) 2010  Alan "Shtark" SCHNEIDER
#                     <shk.schneider[at]gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

[ `whoami` != "root" ] && echo "E: Permission denied. Are you root?" >&2 && exit 1

[ "_`which aptitude`" = "_" ] && echo "E: aptitude: Command not found" >&2 && exit 1
[ "_`which apt-key`" = "_" ] && echo "E: apt-key: Command not found" >&2 && exit 1
[ "_`which gpg`" = "_" ] && echo "E: gpg: Command not found" >&2 && exit 1

SERVER="hkp://keyserver.ubuntu.com:11371"

if [ $# -gt 0 ] ; then
    echo " * Resolving with <$SERVER>..."
    for ERROR in $@ ; do
	[ "_`echo $ERROR | tr "[a-fA-F0-9]" "." | tr -d "."`" != "_" ] && echo "   E: $ERROR: Not hexadecimal" >&2 && continue
	if [ `echo $ERROR | wc -c` -ne 8 ] ; then
	    KEY=$(echo $ERROR | rev | cut -c 1-8 | rev)
	else
	    KEY=$ERROR
	fi
	echo "   GPG error: "$ERROR" -> keycode: "$KEY
	gpg --keyserver $SERVER --recv-key $KEY >/dev/null
	gpg -a --export $KEY >/dev/null | apt-key add -
    done
else
    echo " * Running aptitude update..."
    ERRORS=$(aptitude update 2>&1 | grep "W: GPG error:" | awk '{print $NF}')
    E=0
    for ERROR in $ERRORS ; do
	E=$(($E + 1))
    done
    echo "   $E GPG error(s) found"
    [ $E -eq 0 ] && exit 0
    echo " * Resolving with <$SERVER>..."
    for ERROR in $ERRORS ; do
	KEY=$(echo $ERROR | rev | cut -c 1-8 | rev)
	echo "   GPG error: "$ERROR" -> keycode: "$KEY
	gpg --keyserver $SERVER --recv-key $KEY
	gpg -a --export $KEY | apt-key add -
    done
fi
