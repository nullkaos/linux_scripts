#!/bin/bash
#
# apt-get-key -- auto-retrieve missing PUBKEY
# Copyright (C) 2010-2012  Alan SCHNEIDER
#                          <shk.schneider[at]gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

server="keyserver.ubuntu.com"

[ `id -u` -ne 0 ] && echo "apt-get-key: are you root, `id -un`?" >&2 && exit 1
[ -z "`which aptitude`" ] && echo "apt-get-key: command 'aptitude' not found" >&2 && exit 1
[ -z "`which curl`" ] && echo "apt-get-key: command 'curl' not found" >&2 && exit 1

chown -R `id -u`:`id -g` ~/.gnupg

function get_keycode() {
    server=$1
    key=$2
    wget -q keyserver.ubuntu.com > /dev/null
    [ $? -ne 0 ] && echo "apt-get-key: could not resolve host '$server'" >&2 && exit 1
    gpg --keyserver $server --recv-key $key 2>/dev/null >&2
    gpg -a --export $key | apt-key add - 2>/dev/null >&2
    # Error: 'ping: sendmsg: Operation not permitted' = firewall problem
}

if [ $# -eq 0 ] ; then
    echo " * Running aptitude update..."
    errors=$(aptitude update 2>&1 | grep "W: GPG error:" | awk '{print $NF}')
    e=0
    for error in $errors ; do
	e=$(($e + 1))
    done
    echo "   $e GPG error(s) found"
    [ $e -eq 0 ] && exit 0
    echo " * Resolving with <$server>..."
    for error in $errors ; do
	key=$(echo $error | rev | cut -c 1-8 | rev)
	echo "   GPG error: "$error" -> keycode: "$key
	get_keycode "$server" "$key"
    done
else
    echo " * Resolving with <$server>..."
    for key in $@ ; do
	echo "   GPG error: "$error" -> keycode: "$key
	get_keycode "$server" "$key"
    done
fi

echo "Done"

# EOF
