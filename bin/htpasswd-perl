#!/bin/bash
#
# htpasswd -- replaces perl's htpasswd
# Copyright (C) 2010-2012  Alan SCHNEIDER
#                          <shk.schneider[at]gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

[ -z "`which perl`" ] && error "command 'perl' not found" 1

function usage() {
    echo "Usage: htpasswd [-c] <passwordfile> <username [...]>" >&2
    echo "       The -c flag creates a new file" >&2
    exit 1
}

function error() {
    echo "htpasswd: $1" >&2
    [ $2 -ne 0 ] && exit $2
}

[ $# -lt 2 ] && usage

new="false"
[ $1 = "-c" ] && new="true" && shift

file="$1"
if [ $new = "true" ] ; then
    dir=$(dirname $file)
    [ ! -e $dir ] && error "$dir: no such file or directory" 1
    [ ! -d $dir ] && error "$dir: is not a directory" 1
    [ ! -r $dir ] && error "$dir: permission denied" 1
    echo -n '' > $file
else
    [ ! -f $file ] && error "$file: no such file or directory" 1
    [ -d $file ] && error "$file: is a directory" 1
    [ ! -r $file ] && error "$file: permission denied" 1
fi
shift

for username in $@ ; do
    valid=$(echo $username | grep -E '^[a-zA-Z0-9][a-zA-Z0-9_\-]*[a-zA-Z0-9]$')
    if [ -z "$valid" ] ; then
        error $username": invalid name ([a-zA-Z0-9][a-zA-Z0-9_-]*[a-zA-Z0-9])" 0
    else
        echo "Adding password for $username"
        echo -n "New password: "
        stty -echo
        read passwd1
        stty echo
        echo
        echo -n "Re-type new password: "
        stty -echo
        read passwd2
        stty echo
        echo
        if [ "_$passwd1" = "_$passwd2" ] ; then
	    exists=$(grep -n "^$username:" $file | cut -d':' -f1)
	    passwd=$(perl -le "print crypt($passwd1, $username);")
            if [ -z "$exists" ] ; then
	        echo "$username:$passwd" >> $file
            else
                sed -i "${exists}c${username}:${passwd}" $file
            fi
        else
	    error "they don't match, sorry" 0
        fi
    fi
done

# EOF
