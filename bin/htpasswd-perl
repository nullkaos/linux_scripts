#!/bin/bash
#
# htpasswd -- replaces perl's htpasswd
# Copyright (C) 2010-2012  Alan SCHNEIDER
#                          <shk.schneider[at]gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

[ -z "`which perl`" ] && error "command 'perl' not found" 1

function usage() {
    echo "Usage: htpasswd [-c] <passwordfile> <username [...]>" >&2
    echo "       The -c flag creates a new file" >&2
    exit 1
}

function error() {
    echo "htpasswd: $1" >&2
    [ $2 -ne 0 ] && exit $2
}

[ $# -lt 2 ] && usage

NEW="false"
[ $1 = "-c" ] && NEW="true" && shift

FILE=$1
if [ $NEW = "true" ] ; then
    DIR=$(dirname $FILE)
    [ ! -e $DIR ] && error $DIR": no such file or directory" 1
    [ ! -d $DIR ] && error $DIR": is not a directory" 1
    [ ! -r $DIR ] && error $DIR": permission denied" 1
    echo -n '' > $FILE
else
    [ ! -f $FILE ] && error $FILE": no such file or directory" 1
    [ -d $FILE ] && error $FILE": is a directory" 1
    [ ! -r $FILE ] && error $FILE": permission denied" 1
fi
shift

for USERNAME in $@ ; do
    VALID=$(echo $USERNAME | grep -E '^[a-zA-Z0-9][a-zA-Z0-9_\-]*[a-zA-Z0-9]$')
    if [ -z "$VALID" ] ; then
        error $USERNAME": invalid name ([a-zA-Z0-9][a-zA-Z0-9_-]*[a-zA-Z0-9])" 0
    else
        echo "Adding password for "$USERNAME
        echo -n "New password: "
        stty -echo
        read PASSWD_1
        stty echo
        echo
        echo -n "Re-type new password: "
        stty -echo
        read PASSWD_2
        stty echo
        echo
        if [ "_$PASSWD_1" = "_$PASSWD_2" ] ; then
	    EXISTS=$(grep -n ^$USERNAME: $FILE | cut -d':' -f1)
	    PASSWD=$(perl -le "print crypt($PASSWD_1, $USERNAME);")
            if [ -z "$EXISTS" ] ; then
	        echo $USERNAME":"$PASSWD >> $FILE
            else
                sed -i $EXISTS"c$USERNAME:$PASSWD" $FILE
            fi
        else
	    error "they don't match, sorry" 0
        fi
    fi
done

# EOF
