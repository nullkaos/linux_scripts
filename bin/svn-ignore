#!/bin/bash
#
# svn-ignore -- quick access to svn props
# Copyright (C) 2012  Alan SCHNEIDER
#                     <shk.schneider[at]gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

[ -z "`which svn`" ] && echo "svn-ignore: command 'svn' not found" >&2 && exit 1

function usage() {
    echo "Usage: svn-ignore <list|clear>" >&2
    echo "                  <add|rm> <file> [...]" >&2
    exit 1
}

dir=".svn"
[ ! -d "$dir" ] && echo "svn-ignore: not a svn repository" >&2 && exit 1

[ $# -eq 0 ] && usage

list="#"
for file in `svn propget svn:ignore .` ; do
    list=$(echo "$list$file#")
done

function svn_ignore_list() {
    echo $list | sed -r 's/(^#|#$)//g' | sed '/^$/d' | tr "#" "\n"
}

function svn_ignore_add() {
    for file in "$@" ; do
	if [ -n "`svn propget svn:ignore | egrep "^$file"`" ] ; then
	    echo "svn-ignore: $file already in ignore list"
	else
	    list=$(echo "$list$file#")
	    echo "svn-ignore: $file added to ignore list"
	fi
    done
    svn propset svn:ignore "$(echo $list | sed -r 's/(^#|#$)//g' | sed '/^$/d' | tr "#" "\n")" . > /dev/null
}

function svn_ignore_rm() {
    for file in "$@" ; do
	if [ -z "`svn propget svn:ignore | egrep "^$file"`" ] ; then
	    echo "svn-ignore: $file not in ignore list"
	else
	    list=$(echo $list | sed "s/#$file#/#/")
	    echo "svn-ignore: $file removed from ignore list"
	fi
    done
    svn propset svn:ignore "$(echo $list | sed -r 's/(^#|#$)//g' | sed '/^$/d' | tr "#" "\n")" . > /dev/null
}

function svn_ignore_clear() {
    svn propdel svn:ignore . > /dev/null
    echo "svn-ignore: ignore list is empty"
}

cmd="$1"
shift

case $cmd in
    "list") svn_ignore_list ;;
    "add") svn_ignore_add "$@" ;;
    "rm") svn_ignore_rm "$@" ;;
    "clear") svn_ignore_clear ;;
    *) usage ;;
esac

# EOF
